name: Reusable - GHCR Clean Up Image Tag 🧹🏷️
run-name: GHCR Clean Up Image Tag 🧹🏷️

on:
  workflow_call:
    inputs:
      cleanup_strategy:
        description: 'The cleanup strategy to use: "buildcache" or "ci-container-build"'
        required: true
        type: string
      image_name:
        description: 'Name of the container image package to clean up'
        required: true
        type: string
      image_tag:
        description: 'The tag to be deleted or excluded'
        required: true
        type: string
      username:
        description: 'Username for the registry'
        required: true
        type: string
    secrets:
      GITHUB_WORKFLOW_TOKEN:
        description: 'The GITHUB_TOKEN for authentication.'
        required: true

jobs:
  ghcr-cleanup:
    name: GHCR Clean Up 🧹🏷️
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    permissions:
      # for actions/checkout to fetch code
      contents: read
      # for ghcr-io-cleanup-action to clean up the image tag
      packages: write
    steps:
      # https://github.com/marketplace/actions/ghcr-io-cleanup-action
      - name: GHCR Clean Up 'buildcache' Image Tag 🧹🏷️
        id: ghcr-clean-up-buildcache
        uses: dataaxiom/ghcr-cleanup-action@cd0cdb900b5dbf3a6f2cc869f0dbb0b8211f50c4 # v1.0.16
        if: ${{ inputs.cleanup_strategy == 'buildcache' }}
        with:
          token: ${{ secrets.GITHUB_WORKFLOW_TOKEN }}
          owner: ${{ inputs.username }}
          packages: ${{ inputs.image_name }}
          exclude-tags: ${{ inputs.image_tag }}
          keep-n-untagged: 20

      # https://github.com/marketplace/actions/ghcr-io-cleanup-action
      - name: GHCR Clean Up 'ci-container-build' Image Tag 🧹🏷️
        id: ghcr-clean-up-ci-container-build
        uses: dataaxiom/ghcr-cleanup-action@cd0cdb900b5dbf3a6f2cc869f0dbb0b8211f50c4 # v1.0.16
        if: ${{ inputs.cleanup_strategy == 'ci-container-build' }}
        with:
          token: ${{ secrets.GITHUB_WORKFLOW_TOKEN }}
          owner: ${{ inputs.username }}
          packages: ${{ inputs.image_name }}
          delete-tags: ${{ inputs.image_tag }}
          delete-untagged: true
